//#include <iostream>
//using namespace std;
//
//const int N = 10010, M = 100010;
//
//char P[N], S[M];
////ne中存放的是下标
//
//int ne[N];
//int n, m;
//
//int main()
//{
//	//1 2 3 4 5 6 7 8 9
//	//a b c a b a b a b  - P
//	cin >> n >> P + 1 >> m >> S ;//p从1开始, s从0开始, 也代表i从0开始, j从1开始
//	for (int j = 0, i = 2; j <= n; i++)//寻找ne数组,ne是在p中找ne[i]应该跳转到哪里去
//	{//注意点如果长度为1就是没有前后缀, 长度为2才有可能, j 从 1开始, 但是初始为0, 开始直接以+1形态比较
//		while (j && P[i] != P[j + 1]) j = ne[j]; //这个是跳转用的
//		//如果相同就前进, 我们要存进ne[i]的是j,也就是在P中的下标
//		if (P[j + 1] == P[i]) j++;
//		ne[i] = j;//当下标是i时, 可以跳转到的上一个位置
//		//这一步有可能ne中记录了i是个坏位置, 需要直接跳到起点0
//	}//ne是包括了所以
//
//	for (int i = 1, j = 0; i <= m; i++)
//	{
//		while (j && P[j + 1] != S[i]) j = ne[j];//ne中存的是p的下标, ne[1] = 0
//		if (S[i] == P[j + 1]) j++;
//		if (j == n)//j从0开始下标就是从0 - m - 1
//		{//找到了
//			printf("%d ", i - n);//起始位置当前S中下标是i, 长度是m i - n + 1 - 1
//			j = ne[j];//为什么要跳转?
//		}
// }
//
//	return 0;
//} 