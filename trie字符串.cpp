//#include <iostream>
//
//using namespace std;
//
//const int N = 100010;
//int son[N][26];//节点, 有son个节点, 每个节点最多26个子节点, 也就是变
////
//int idx, cnt[N];//记录以一个节点为结束的单词的个数
//
//
//void in(char s[])
//{
//	int p = 0;
//	for (int i = 0;s[i]; i++)//字符串结尾是'\0', 可以用作结尾的判断
//	{
//		int u = s[i] = 'a';
//		if (!son[p][u]) son[p][u] = ++ idx;//第一个节点
//		p = son[p][u];
//	}
//	cnt[p]++;
//}
//
//int fin(char s[])
//{
//	int p = 0;
//	for (int i = 0; i < s[i]; i++)
//	{
//		int u = s[i] - 'a';
//		if (!son[p][u]) return 0;
//		p = son[p][u];
//	}
//	return cnt[p];//返回以这个节点结尾的单词得个数
//}
//
////p是什么?idx是什么
////显然idx就是每个节点的编号, 是不会重复的, 虽然不一定有用,但是确实不会重复, 是身份的一个特征
//
////p在变化过程中, 第一个是0
////以后的p = son[0][u],其中u是这个字符在字母中的下标, 从0 - 25代表a-z
////然后看[p][u]//也就是下一个字母有没有下一个节点,且是这次循环需要的节点
////p是这树的高度, 或者是层数, u是这个宽度, 或者是下标
//
////idx是每个节点的下标, 
